name: TCM Robot CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  VERSION: ${{ github.sha }}
  DOCKER_USERNAME: "17882286232"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "17882286232"
          password: "Qq13724965045"

      - name: Build and push frontend image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: 17882286232/tcm-robot-web:${{ env.VERSION }}, 17882286232/tcm-robot-web:latest

      - name: Build and push backend image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          push: true
          tags: 17882286232/tcm-robot-backend:${{ env.VERSION }}, 17882286232/tcm-robot-backend:latest

      - name: Build and push NLP service image
        uses: docker/build-push-action@v2
        with:
          context: ./nlp-service
          push: true
          tags: 17882286232/tcm-nlp-processor:${{ env.VERSION }}, 17882286232/tcm-nlp-processor:latest

      - name: Build and push Redis image
        uses: docker/build-push-action@v2
        with:
          context: ./redis
          push: true
          tags: 17882286232/tcm-redis:${{ env.VERSION }}, 17882286232/tcm-redis:latest

      - name: Build and push knowledge updater image
        uses: docker/build-push-action@v2
        with:
          context: ./knowledge-updater
          push: true
          tags: 17882286232/tcm-knowledge-updater:${{ env.VERSION }}, 17882286232/tcm-knowledge-updater:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Create API key secret
        run: |
          kubectl create secret generic tcm-api-keys --from-literal=deepseek-key=${{ secrets.DEEPSEEK_KEY }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kubernetes manifests with new image tags
        run: |
          # 更新镜像标签
          sed -i "s|tcm-robot-web:1.2|17882286232/tcm-robot-web:${{ env.VERSION }}|g" kubernetes/manifests/deployment.yaml
          sed -i "s|tcm-robot-backend:latest|17882286232/tcm-robot-backend:${{ env.VERSION }}|g" kubernetes/manifests/deployment.yaml
          sed -i "s|tcm-nlp-processor:2.1|17882286232/tcm-nlp-processor:${{ env.VERSION }}|g" kubernetes/manifests/deployment.yaml
          sed -i "s|tcm-redis:latest|17882286232/tcm-redis:${{ env.VERSION }}|g" kubernetes/manifests/deployment.yaml
          sed -i "s|tcm-knowledge-updater:latest|17882286232/tcm-knowledge-updater:${{ env.VERSION }}|g" kubernetes/manifests/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/manifests/volumes.yaml
          kubectl apply -f kubernetes/manifests/services.yaml
          kubectl apply -f kubernetes/manifests/deployment.yaml
          kubectl apply -f kubernetes/manifests/ingress.yaml

      - name: Verify deployment
        run: |
          kubectl get pods
          kubectl get services
          echo "等待部署完成..."
          kubectl rollout status deployment/tcm-frontend
          kubectl rollout status deployment/tcm-backend
          kubectl rollout status deployment/tcm-nlp-service
          kubectl rollout status deployment/tcm-redis